sap.ui.define([
	"sap/ui/demo/cart/controller/BaseController",
	"sap/base/util/deepExtend",
	"sap/ui/core/syncStyleClass",
	"sap/ui/core/mvc/Controller",
	"sap/m/ObjectMarker",
	"sap/m/MessageToast",
	"sap/m/UploadCollectionParameter",
	"sap/m/library",
	"sap/ui/model/json/JSONModel",
	"sap/ui/core/format/FileSizeFormat",
	"sap/ui/Device",
	"sap/ui/demo/cart/model/formatter",
	"sap/m/Dialog"
], function(BaseController, deepExtend, syncStyleClass, Controller, ObjectMarker, MessageToast, UploadCollectionParameter, MobileLibrary, JSONModel, FileSizeFormat, Device, formatter, Dialog) {
	"use strict";
	var ListMode = MobileLibrary.ListMode,
	ListSeparators = MobileLibrary.ListSeparators;
	return BaseController.extend("sap.ui.demo.cart.controller.Camera", {
		formatter: formatter,

		onInit : function () {
			var oRouter = this.getOwnerComponent().getRouter();
			oRouter.getRoute("Camera").attachMatched(this._onRouteMatched, this);
		},
		_onRouteMatched : function(){
			 var that = this;
			 this._oLocalModel = this.getOwnerComponent().getModel("local");
			 this.firstTwoDisplay();
		},
		getAllItems: function(oGrid){
			var getSelectedItems = oGrid.getSelectedItems();
			var paths = [];
			for (var i = 0; i < getSelectedItems.length; i++) {
				paths.push(getSelectedItems[i].getBindingContext("local").getPath());
			}
			return paths;
		},
		takePhoto: function() {
			//This code was generated by the layout editor.
			var that = this;
			//Step 1: Create a popup object as a global variable
			this.fixedDialog = new Dialog({
				title: "Click on Capture to take photo",
				beginButton: new sap.m.Button({
					text: "Capture Photo",
					press: function(oEvent) {
						// TO DO: get the object of our video player which live camera stream is running
						//take the image object out of it and set to main page using global variable
						that.imageVal = document.getElementById("player");
						debugger;
						let imageCapture = new ImageCapture(that.stream.getVideoTracks()[0]);
						var that2 = that;
						imageCapture.takePhoto()
					  .then(blob => {
					    that2.imageContent = blob;
							var that3 = that2;
							var reader = new FileReader();
							var Stream = URL.createObjectURL(blob);
							reader.readAsDataURL(blob);
							reader.onloadend = function() {
									debugger;
									that3._allImages.push({
										"Stream": Stream,
										"Content": reader.result
									});
									that3.getModel("local").setProperty("/allImages", that3._allImages);
									that3.stream.getTracks().forEach(function(track) {
										track.stop();
									});
									that3.fixedDialog.close();
									that3.fixedDialog.destroy();
							}
					  })
					  .catch(error =>
							console.log(error)
						);

					}
				}),
				content: [
					new sap.ui.core.HTML({
						content: "<video id='player' autoplay></video>"
					})
				],
				endButton: new sap.m.Button({
					text: "Cancel",
					press: function() {
						that.stream.getTracks().forEach(function(track) {
						  track.stop();
						});
						that.fixedDialog.close();
						that.fixedDialog.destroy();
					}
				})
			});

			this.getView().addDependent(this.fixedDialog);
			//Step 2: Launch the popup
			this.fixedDialog.open();
			this.fixedDialog.attachBeforeClose(this.setImage, this);
			var handleSuccess = function(stream) {
				player.srcObject = stream;
				that.stream = stream;
			}
			navigator.mediaDevices.getUserMedia({
				video: true
			}).then(handleSuccess);
		},
		imageVal: "",
		setImage: function() {
			//Take the running image from the video stream of camera
			// var oVBox = this.getView().byId("wow");
			// var items = oVBox.getItems();
			// var snapId = 'anubhav-' + items.length;
			// var textId = snapId + '-text';
			// var imageVal = this.imageVal;
			//
			// //set that as a canvas element on HTML page
			// var oCanvas = new sap.ui.core.HTML({
			// 	content: "<canvas id='canvas' width='320px' height='320px' " +
			// 		" style='2px solid red'></canvas> " +
			// 		" <label id='" + textId + "'>" + this.attachName + "</label>"
			// });
			// oVBox.addItem(oCanvas);
			// oCanvas.addEventDelegate({
			// 	onAfterRendering: function() {
			// 		var snapShotCanvas = document.getElementById(snapId);
			// 		var oContext = snapShotCanvas.getContext('2d');
			// 		oContext.drawImage(imageVal, 0, 0, snapShotCanvas.width, snapShotCanvas.height);
			// 	}
			// });

		},
		onDelete: function(oEvent){
			var sPaths = this.getAllItems(oEvent.getSource().getParent().getParent());
			sPaths = this.reverseSort(sPaths,"allImages");
			var that = this;
			for (var i = 0; i < sPaths.length; i++) {
				var toBeDeleted = this.getView().getModel("local").getProperty(sPaths[i]);
				if(toBeDeleted.id){
					//To be deleted from server also
					if (toBeDeleted.id !== "") {
						$.post('/DeletePhoto', {"id": toBeDeleted.id})
							.done(function(data, status){
								 that.deleteImage(toBeDeleted.Stream);
							})
							.fail(function(xhr, status, error) {

							});
					}
				}else{
					this.deleteImage(toBeDeleted.Stream);
				}
			}
			oEvent.getSource().getParent().getParent().removeSelections();
		},
		deleteImage: function (Stream) {
			for (var j = 0; j < this._allImages.length; j++) {
				if(this._allImages[j].Stream === Stream){
					this._allImages.splice(j,1);
					break;
				}
			}
			this.getView().getModel("local").setProperty("/allImages",this._allImages);
		},

		onUploadChange: function(oEvent) {
			const files = oEvent.getParameter("files");
			var that = this;
			if (!files.length) {

			} else {
				for (let i = 0; i < files.length; i++) {
					//const img = document.createElement("img");
					var reader = new FileReader();
					reader.onload = function(e){
						try {
							var vContent = e.currentTarget.result; //.result.replace("data:image/jpeg;base64,", "");
							for (var i = 0; i < that._allImages.length; i++) {
								if(!that._allImages[i].Content){
									that._allImages[i].Content = vContent;
									that.getView().getModel("local").setProperty("/allImages", that._allImages);
									//console.log(that._allImages);
									break;
								}
							}
						} catch (e) {

						}
					};
					var img = {
						"Stream": "",
						"Content": ""
					};
					img.Stream = URL.createObjectURL(files[i]);
					reader.readAsDataURL(files[i]);
					this._allImages.push(img);
				}
			}
		},

		getRouter: function () {
			return sap.ui.core.UIComponent.getRouterFor(this);
		},
		_bindView : function (sObjectPath) {

		},
		_onBindingChange : function () {

		}
	});
});
